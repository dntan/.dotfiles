;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(xref--read-pattern-history tmm--history yes-or-no-p-history org-read-date-history xref--read-identifier-history org-link--history minibuffer-history read-number-history extended-command-history file-name-history buffer-name-history))
(setq tmm--history '("h==>Help" "s==>Sh-Script" "t==>Tools" "b==>Buffers" "o==>Options" "e==>Edit" "f==>File"))
(setq yes-or-no-p-history '("yes" "no" "yes" "y"))
(setq org-read-date-history '("   "))
(setq minibuffer-history '("yes" "line-number-display-width" "line number" "yes" "org-agenda-files" "no" "org-format-latex-options" "yes" "find-name-dired" "file-name-dired" "yes" "Baratza Encore ESP 230" "daemonp" "Fast Track Info" "File systems compared" "GPG Keys" "Checksum ISO and GPG Keys" "Check ISO" "https://arcolinux.com/how-to-check-if-the-downloaded-iso-is-not-corrupted/" "Check ISO" "yes"))
(setq extended-command-history '("package-upgrade-all" "magit-status" "eshell" "Buffer-menu-1-window" "global-visual-line-mode" "visual-line-mode" "describe-function" "eshell" "display-line-numbers-mode" "org-agenda" "eshell" "org-mode" "org-agenda" "org-schedule" "org-agenda" "eval-buffer" "list-packages" "shell-script-mode" "eshell" "global-visual-line-mode" "which-function-mode" "visual-line-mode" "org-info" "org-mode"))
(setq file-name-history '("~/.emacs.d/config.org" "~/Desktop/.dotfiles/" "~/.emacs.d/config.org" "~/Desktop/.dotfiles/" "~/Desktop/.dotfiles/up.sh" "~/Desktop/.dotfiles/README.md" "~/Documents/arcolinux-nemesis/setup-git-v5.sh" "~/Documents/emacs_best_prac.org" "~/.emacs.d/config.org" "~/Documents/arcolinux-nemesis/" "~/Desktop/.dotfiles/" "~/Documents/virtualmachines.org" "~/Documents/emacs_best_prac.org" "~/.emacs.d/config.org" "~/Documents/arcolinux-nemesis/" "~/.emacs.d/config.org" "~/Documents/emacs_best_prac.org" "~/.emacs.d/config.org" "~/Documents/emacs_best_prac.org" "~/Documents/" "~/Documents/emacs_best_prac.org" "~/.emacs.d/config.org" "~/Documents/orgmode_latex.org" "~/.emacs.d/config.org" "~/.emacs.d/config.el" "~/.emacs.d/config.org" "~/.emacs.d/" "~/Documents/automating_sys_pref.org" "~/.emacs.d/config.org" "~/Documents/automating_sys_pref.org" "~/Documents/magit_w_sc.org" "~/Documents/venv_getting_started.org" "~/Documents/automating_sys_pref.org" "~/.emacs.d/config.org" "~/Documents/automating_sys_pref.org" "~/Documents/daily_learning.org" "~/.emacs.d/config.org" "~/Documents/orgmode_latex.org" "~/.emacs.d/config.org" "~/Documents/orgmode_latex.org" "~/.emacs.d/config.org" "~/Documents/orgmode_latex.org" "~/Documents/tasks.org" "~/.emacs.d/config.org" "~/Documents/tasks.org" "~/Documents/statistical_studys.org" "~/.emacs.d/config.org" "~/Documents/tasks.org" "~/Documents/orgmode_latex.org" "~/.emacs.d/config.org" "~/Documents/orgmode_latex.org" "~/Documents/orgmode_learn.org" "~/.emacs.d/config.org" "~/Documents/orgmode_learn.org" "~/.emacs.d/config.org" "~/Documents/orgmode_learn.org" "~/.emacs.d/config.org" "~/Documents/orgmode_learn.org" "~/.emacs.d/config.org" "~/Documents/orgmode_learn.org" "~/.emacs.d/config.org" "~/.emacs.d/init.el" "~/.emacs.d/config.org" "~/.bashrc" "~/.bashrc-personal" "~/.bashrc" "~/.bashrc-personal" "~/.bashrc" "~/.bashrc-personal" "~/.bashrc" "~/Documents/orgmode_learn.org" "~/.emacs.d/config.org" "~/Documents/orgmode_learn.org" "~/.emacs.d/init.el" "~/.emacs.d/config.org" "~/Documents/orgmode_learn.org" "~/Desktop/.dotfiles/up.sh" "~/Desktop/.dotfiles/setup.sh" "~/Desktop/.dotfiles/README.md" "~/Documents/git_learn.org" "~/Documents/aeropress_coffee.org" "~/.emacs.d/init.el" "~/Documents/orgmode_learn.org" "~/Documents/team_coding.org" "~/Documents/orgmode_learn.org" "~/.bashrc" "~/Documents/learn_bash.org" "~/Documents/arcolinux_2024.org" "~/arco_iso/md5sum-checklist.chk" "~/Downloads/md5sum-checklist.chk" "~/.bashrc" "~/Documents/arcolinux_2024.org" "~/Documents/khan_stats_prob.org" "~/.emacs.d/init.el"))
(setq buffer-name-history '("*Org Src config.org[ emacs-lisp ]*" "*scratch*" "*Org Src config.org[ emacs-lisp ]*" "config.org" "*Warnings*" "magit-revision: .dotfiles" "config.org" "up.sh" "README.md" "setup-git-v5.sh" "*eshell*" ".dotfiles" "up.sh" "alacritty" "scripts" "variety" "wallpaper" "sublimetext" "personal-folder" "carli" "settings" "Personal" "arcolinux-nemesis" "*eshell*" "970-arch.sh" "999-what-if-desktops.sh" "whiskermenu-7.rc" "Preferences.sublime-settings" "get_wallpaper_arco" "alacritty.yml" "setup-git-v5.sh" "README.md" "*Messages*" "*Org Src config.org[ emacs-lisp ]*" "*scratch*" "*Help*" "*Apropos*" "config.org" "*Backtrace*" "config.org" "*Backtrace*" "*Compile-Log*" "*Warnings*" "*info*" "magit_w_sc.org" "*Buffer List*" "venv_getting_started.org" "config.org" "tasks.org" "orgmode_latex.org" "config.org" "*Buffer List*" "*scratch*" "*Messages*" "*Help*" "*Completions*" "*Backtrace*" "config.org" "tasks.org" "statistical_studys.org" "tasks.org" "*Calendar*" "*Org Agenda*" "*Backtrace*" "*Org Agenda*" "*Completions*" "*Backtrace*" "orgmode_latex.org" "config.org" "orgmode_latex.org" "config.org" ".bashrc-personal" ".bashrc" "*Messages*" ".bashrc" ".bashrc-personal" "orgmode_learn.org" ".bashrc" "git_learn.org" "README.md" "*eshell*" "aeropress_coffee.org" "TUTORIAL" "*Calendar*" "*Completions*" "*Help*" "learn_bash.org" "*info*" "*Messages*" "*scratch*" "learn_bash.org" "arcolinux_2024.org" "md5sum-checklist.chk" ".bashrc" "arcolinux_2024.org" "*scratch*" "khan_stats_prob.org" "TUTORIAL" "*scratch*" "*Buffer List*"))
(setq evil-jumps-history '((1 "/home/danny/.emacs.d/config.org") (3942 #1="/home/danny/.emacs.d/config.org") (3683 #1#) (3669 #2="/home/danny/.emacs.d/config.org") (3369 #2#) (3394 #4="/home/danny/.emacs.d/config.org") (1267 #3="/home/danny/Documents/emacs_best_prac.org") (1162 #3#) (108 #3#) (3394 #4#) (1979 "/home/danny/.emacs.d/config.org") (1 "/home/danny/Documents/virtualmachines.org") (317 "/home/danny/Documents/arcolinux-nemesis/0-current-choices.sh") (596 "/home/danny/Documents/emacs_best_prac.org") (26677 "/usr/share/emacs/29.4/etc/NEWS.26") (149 #5="/home/danny/Documents/emacs_best_prac.org") (149 #5#) (552 #6="/home/danny/.emacs.d/config.org") (149 #5#) (1 #5#) (552 #6#) (552 #6#) (3740 #7="/home/danny/Documents/orgmode_latex.org") (3250 #7#) (1054 "/home/danny/.emacs.d/config.org")))
(setq kill-ring '(#("    (setq evil-want-keybinding nil)  
" 0 5 (yank-handler #1=(evil-yank-line-handler nil t) src-block t face #2=(org-block) font-lock-multiline t font-lock-fontified t fontified t) 5 9 (yank-handler #1# src-block t face (font-lock-keyword-face . #2#) font-lock-multiline t font-lock-fontified t fontified t) 9 38 (yank-handler #1# src-block t face #2# font-lock-multiline t font-lock-fontified t fontified t)) "Warning (evil-collection): Make sure to set `evil-want-keybinding' to nil before loading evil or evil-collection.
" "ng evil or evil-collection.
" "Failed to install evil-collection: https://melpa.org/packages/evil-collection-20240827.1102.tar: Not found
" "(use-package evil-collection
  :ensure t
  :after evil
  :init
  (evil-collection-init))" "** Package Manager

#+begin_src emacs-lisp

  ;; Initialize package sources
  (require 'package)

  (setq package-archives '((\"melpa\" . \"https://melpa.org/packages/\")
			   (\"org\" . \"https://orgmode.org/elpa/\")
			   (\"elpa\" . \"https://elpa.gnu.org/packages/\")))

  (package-initialize)
  (unless package-archive-contents
   (package-refresh-contents))

  ;; Initialize use-package on non-Linux platforms
  (unless (package-installed-p 'use-package)
     (package-install 'use-package))

  (require 'use-package)
  (setq use-package-always-ensure t)

#+end_src

" #("
** Package Manager
" 0 1 (yank-handler #3=(evil-yank-line-handler nil t) fontified t) 1 2 (yank-handler #3# keymap #4=(keymap) face org-hide fontified t) 2 3 (yank-handler #3# face org-level-2 keymap #4# fontified t) 3 4 (yank-handler #3# face org-level-2 keymap #4# fontified t) 4 19 (yank-handler #3# face org-level-2 fontified t) 19 20 (yank-handler #3# fontified t)) #("** Package Manager

#+begin_src emacs-lisp

  ;; Initialize package sources
  (require 'package)

  (setq package-archives '((\"melpa\" . \"https://melpa.org/packages/\")
			   (\"org\" . \"https://orgmode.org/elpa/\")
			   (\"elpa\" . \"https://elpa.gnu.org/packages/\")))

  (package-initialize)
  (unless package-archive-contents
   (package-refresh-contents))

  ;; Initialize use-package on non-Linux platforms
  (unless (package-installed-p 'use-package)
     (package-install 'use-package))

  (require 'use-package)
  (setq use-package-always-ensure t)

#" 0 1 (keymap #4# face org-hide fontified t) 1 2 (face org-level-2 keymap #4# fontified t) 2 3 (face org-level-2 keymap #4# fontified t) 3 18 (face org-level-2 fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 42 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t) 42 43 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t) 43 44 (src-block t face #5=(org-block) font-lock-multiline t font-lock-fontified t fontified t) 44 46 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 46 49 (src-block t face #18=(font-lock-comment-delimiter-face . #5#) font-lock-multiline t font-lock-fontified t fontified t) 49 76 (src-block t face #17=(font-lock-comment-face . #5#) font-lock-multiline t font-lock-fontified t fontified t) 76 79 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 79 86 (src-block t face #20=(font-lock-keyword-face . #5#) font-lock-multiline t font-lock-fontified t fontified t) 86 88 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 88 95 (src-block t face #19=(font-lock-constant-face . #5#) font-lock-multiline t font-lock-fontified t fontified t) 95 97 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 97 98 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 98 101 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 101 105 (src-block t face #21=(font-lock-keyword-face . #5#) font-lock-multiline t font-lock-fontified t fontified t) 105 126 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 126 133 (src-block t face #22=(font-lock-string-face . #5#) font-lock-multiline t font-lock-fontified t fontified t) 133 136 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 136 137 (src-block t face #7=(font-lock-string-face . #5#) font-lock-multiline t font-lock-fontified t fontified t) 137 163 (src-block t face #7# font-lock-fontified t font-lock-multiline t htmlize-link #8=(:uri "https://melpa.org/packages/") help-echo #9="LINK: https://melpa.org/packages/" keymap #6=(keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight fontified t) 163 164 (src-block t face #7# font-lock-fontified t font-lock-multiline t htmlize-link #8# help-echo #9# keymap #6# mouse-face highlight rear-nonsticky #13=(mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) fontified t) 164 165 (src-block t face #7# font-lock-multiline t font-lock-fontified t fontified t) 165 167 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 167 174 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 174 179 (src-block t face #23=(font-lock-string-face . #5#) font-lock-multiline t font-lock-fontified t fontified t) 179 182 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 182 183 (src-block t face #10=(font-lock-string-face . #5#) font-lock-multiline t font-lock-fontified t fontified t) 183 207 (src-block t face #10# font-lock-fontified t font-lock-multiline t htmlize-link #11=(:uri "https://orgmode.org/elpa/") help-echo #12="LINK: https://orgmode.org/elpa/" keymap #6# mouse-face highlight fontified t) 207 208 (src-block t face #10# font-lock-fontified t font-lock-multiline t htmlize-link #11# help-echo #12# keymap #6# mouse-face highlight rear-nonsticky #13# fontified t) 208 209 (src-block t face #10# font-lock-multiline t font-lock-fontified t fontified t) 209 211 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 211 218 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 218 224 (src-block t face #25=(font-lock-string-face . #5#) font-lock-multiline t font-lock-fontified t fontified t) 224 227 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 227 228 (src-block t face #14=(font-lock-string-face . #5#) font-lock-multiline t font-lock-fontified t fontified t) 228 257 (src-block t face #14# font-lock-fontified t font-lock-multiline t htmlize-link #15=(:uri "https://elpa.gnu.org/packages/") help-echo #16="LINK: https://elpa.gnu.org/packages/" keymap #6# mouse-face highlight fontified t) 257 258 (src-block t face #14# font-lock-fontified t font-lock-multiline t htmlize-link #15# help-echo #16# keymap #6# mouse-face highlight rear-nonsticky #13# fontified t) 258 259 (src-block t face #14# font-lock-multiline t font-lock-fontified t fontified t) 259 263 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 263 264 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 264 287 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 287 290 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 290 296 (src-block t face #26=(font-lock-keyword-face . #5#) font-lock-multiline t font-lock-fontified t fontified t) 296 322 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 322 353 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 353 354 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 354 356 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 356 359 (src-block t face #27=(font-lock-comment-delimiter-face . #5#) font-lock-multiline t font-lock-fontified t fontified t) 359 405 (src-block t face #24=(font-lock-comment-face . #5#) font-lock-multiline t font-lock-fontified t fontified t) 405 408 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 408 414 (src-block t face #28=(font-lock-keyword-face . #5#) font-lock-multiline t font-lock-fontified t fontified t) 414 450 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 450 487 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 487 488 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 488 491 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 491 498 (src-block t face #30=(font-lock-keyword-face . #5#) font-lock-multiline t font-lock-fontified t fontified t) 498 500 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 500 511 (src-block t face #29=(font-lock-constant-face . #5#) font-lock-multiline t font-lock-fontified t fontified t) 511 513 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 513 516 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 516 520 (src-block t face #31=(font-lock-keyword-face . #5#) font-lock-multiline t font-lock-fontified t fontified t) 520 550 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 550 551 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 551 552 (face org-block-end-line font-lock-multiline t font-lock-fontified t fontified t)) #("** Package Manager

#+begin_src emacs-lisp

  ;; Initialize package sources
  (require 'package)

  (setq package-archives '((\"melpa\" . \"https://melpa.org/packages/\")
			   (\"org\" . \"https://orgmode.org/elpa/\")
			   (\"elpa\" . \"https://elpa.gnu.org/packages/\")))

  (package-initialize)
  (unless package-archive-contents
   (package-refresh-contents))

  ;; Initialize use-package on non-Linux platforms
  (unless (package-installed-p 'use-package)
     (package-install 'use-package))

  (require 'use-package)
  (setq use-package-always-ensure t)

#+end_src

" 0 1 (keymap #4# face org-hide fontified t) 1 2 (face org-level-2 keymap #4# fontified t) 2 3 (face org-level-2 keymap #4# fontified t) 3 18 (face org-level-2 fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 42 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t) 42 43 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t) 43 44 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 44 46 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 46 49 (src-block t face #18# font-lock-multiline t font-lock-fontified t fontified t) 49 76 (src-block t face #17# font-lock-multiline t font-lock-fontified t fontified t) 76 79 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 79 86 (src-block t face #20# font-lock-multiline t font-lock-fontified t fontified t) 86 88 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 88 95 (src-block t face #19# font-lock-multiline t font-lock-fontified t fontified t) 95 97 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 97 98 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 98 101 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 101 105 (src-block t face #21# font-lock-multiline t font-lock-fontified t fontified t) 105 126 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 126 133 (src-block t face #22# font-lock-multiline t font-lock-fontified t fontified t) 133 136 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 136 137 (src-block t face #7# font-lock-multiline t font-lock-fontified t fontified t) 137 163 (src-block t face #7# font-lock-fontified t font-lock-multiline t htmlize-link #8# help-echo #9# keymap #6# mouse-face highlight fontified t) 163 164 (src-block t face #7# font-lock-fontified t font-lock-multiline t htmlize-link #8# help-echo #9# keymap #6# mouse-face highlight rear-nonsticky #13# fontified t) 164 165 (src-block t face #7# font-lock-multiline t font-lock-fontified t fontified t) 165 167 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 167 174 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 174 179 (src-block t face #23# font-lock-multiline t font-lock-fontified t fontified t) 179 182 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 182 183 (src-block t face #10# font-lock-multiline t font-lock-fontified t fontified t) 183 207 (src-block t face #10# font-lock-fontified t font-lock-multiline t htmlize-link #11# help-echo #12# keymap #6# mouse-face highlight fontified t) 207 208 (src-block t face #10# font-lock-fontified t font-lock-multiline t htmlize-link #11# help-echo #12# keymap #6# mouse-face highlight rear-nonsticky #13# fontified t) 208 209 (src-block t face #10# font-lock-multiline t font-lock-fontified t fontified t) 209 211 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 211 218 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 218 224 (src-block t face #25# font-lock-multiline t font-lock-fontified t fontified t) 224 227 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 227 228 (src-block t face #14# font-lock-multiline t font-lock-fontified t fontified t) 228 257 (src-block t face #14# font-lock-fontified t font-lock-multiline t htmlize-link #15# help-echo #16# keymap #6# mouse-face highlight fontified t) 257 258 (src-block t face #14# font-lock-fontified t font-lock-multiline t htmlize-link #15# help-echo #16# keymap #6# mouse-face highlight rear-nonsticky #13# fontified t) 258 259 (src-block t face #14# font-lock-multiline t font-lock-fontified t fontified t) 259 263 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 263 264 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 264 287 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 287 290 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 290 296 (src-block t face #26# font-lock-multiline t font-lock-fontified t fontified t) 296 322 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 322 353 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 353 354 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 354 356 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 356 359 (src-block t face #27# font-lock-multiline t font-lock-fontified t fontified t) 359 405 (src-block t face #24# font-lock-multiline t font-lock-fontified t fontified t) 405 408 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 408 414 (src-block t face #28# font-lock-multiline t font-lock-fontified t fontified t) 414 450 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 450 487 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 487 488 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 488 491 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 491 498 (src-block t face #30# font-lock-multiline t font-lock-fontified t fontified t) 498 500 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 500 511 (src-block t face #29# font-lock-multiline t font-lock-fontified t fontified t) 511 513 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 513 516 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 516 520 (src-block t face #31# font-lock-multiline t font-lock-fontified t fontified t) 520 550 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 550 551 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 551 560 (face org-block-end-line font-lock-multiline t font-lock-fontified t fontified t) 560 561 (face org-block-end-line fontified t) 561 562 (fontified t)) #("** Package Manager
" 0 1 (keymap #4# face org-hide fontified t) 1 2 (face org-level-2 keymap #4# fontified t) 2 3 (face org-level-2 keymap #4# fontified t) 3 18 (face org-level-2 fontified t) 18 19 (fontified t)) #("** Package Manager

#+begin_src emacs-lisp

  ;; Initialize package sources
  (require 'package)

  (setq package-archives '((\"melpa\" . \"https://melpa.org/packages/\")
			   (\"org\" . \"https://orgmode.org/elpa/\")
			   (\"elpa\" . \"https://elpa.gnu.org/packages/\")))

  (package-initialize)
  (unless package-archive-contents
   (package-refresh-contents))

  ;; Initialize use-package on non-Linux platforms
  (unless (package-installed-p 'use-package)
     (package-install 'use-package))

  (require 'use-package)
  (setq use-package-always-ensure t)

#+end_src
" 0 1 (keymap #4# face org-hide fontified t) 1 2 (face org-level-2 keymap #4# fontified t) 2 3 (face org-level-2 keymap #4# fontified t) 3 18 (face org-level-2 fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 42 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t) 42 43 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t) 43 44 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 44 46 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 46 49 (src-block t face #18# font-lock-multiline t font-lock-fontified t fontified t) 49 76 (src-block t face #17# font-lock-multiline t font-lock-fontified t fontified t) 76 79 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 79 86 (src-block t face #20# font-lock-multiline t font-lock-fontified t fontified t) 86 88 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 88 95 (src-block t face #19# font-lock-multiline t font-lock-fontified t fontified t) 95 97 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 97 98 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 98 101 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 101 105 (src-block t face #21# font-lock-multiline t font-lock-fontified t fontified t) 105 126 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 126 133 (src-block t face #22# font-lock-multiline t font-lock-fontified t fontified t) 133 136 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 136 137 (src-block t face #7# font-lock-multiline t font-lock-fontified t fontified t) 137 163 (src-block t face #7# font-lock-fontified t font-lock-multiline t htmlize-link #8# help-echo #9# keymap #6# mouse-face highlight fontified t) 163 164 (src-block t face #7# font-lock-fontified t font-lock-multiline t htmlize-link #8# help-echo #9# keymap #6# mouse-face highlight rear-nonsticky #13# fontified t) 164 165 (src-block t face #7# font-lock-multiline t font-lock-fontified t fontified t) 165 167 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 167 174 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 174 179 (src-block t face #23# font-lock-multiline t font-lock-fontified t fontified t) 179 182 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 182 183 (src-block t face #10# font-lock-multiline t font-lock-fontified t fontified t) 183 207 (src-block t face #10# font-lock-fontified t font-lock-multiline t htmlize-link #11# help-echo #12# keymap #6# mouse-face highlight fontified t) 207 208 (src-block t face #10# font-lock-fontified t font-lock-multiline t htmlize-link #11# help-echo #12# keymap #6# mouse-face highlight rear-nonsticky #13# fontified t) 208 209 (src-block t face #10# font-lock-multiline t font-lock-fontified t fontified t) 209 211 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 211 218 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 218 224 (src-block t face #25# font-lock-multiline t font-lock-fontified t fontified t) 224 227 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 227 228 (src-block t face #14# font-lock-multiline t font-lock-fontified t fontified t) 228 257 (src-block t face #14# font-lock-fontified t font-lock-multiline t htmlize-link #15# help-echo #16# keymap #6# mouse-face highlight fontified t) 257 258 (src-block t face #14# font-lock-fontified t font-lock-multiline t htmlize-link #15# help-echo #16# keymap #6# mouse-face highlight rear-nonsticky #13# fontified t) 258 259 (src-block t face #14# font-lock-multiline t font-lock-fontified t fontified t) 259 263 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 263 264 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 264 287 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 287 290 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 290 296 (src-block t face #26# font-lock-multiline t font-lock-fontified t fontified t) 296 322 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 322 353 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 353 354 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 354 356 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 356 359 (src-block t face #27# font-lock-multiline t font-lock-fontified t fontified t) 359 405 (src-block t face #24# font-lock-multiline t font-lock-fontified t fontified t) 405 408 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 408 414 (src-block t face #28# font-lock-multiline t font-lock-fontified t fontified t) 414 450 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 450 487 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 487 488 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 488 491 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 491 498 (src-block t face #30# font-lock-multiline t font-lock-fontified t fontified t) 498 500 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 500 511 (src-block t face #29# font-lock-multiline t font-lock-fontified t fontified t) 511 513 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 513 516 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 516 520 (src-block t face #31# font-lock-multiline t font-lock-fontified t fontified t) 520 550 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 550 551 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 551 560 (face org-block-end-line font-lock-multiline t font-lock-fontified t fontified t) 560 561 (face org-block-end-line fontified t)) #("** Package Manager

#+begin_src emacs-lisp

  ;; Initialize package sources
  (require 'package)

  (setq package-archives '((\"melpa\" . \"https://melpa.org/packages/\")
			   (\"org\" . \"https://orgmode.org/elpa/\")
			   (\"elpa\" . \"https://elpa.gnu.org/packages/\")))

  (package-initialize)
  (unless package-archive-contents
   (package-refresh-contents))

  ;; Initialize use-package on non-Linux platforms
  (unless (package-installed-p 'use-package)
     (package-install 'use-package))

  (require 'use-package)
  (setq use-package-always-ensure t)

#+end_src
" 0 1 (keymap #4# face org-hide fontified t) 1 2 (face org-level-2 keymap #4# fontified t) 2 3 (face org-level-2 keymap #4# fontified t) 3 18 (face org-level-2 fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 42 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t) 42 43 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t) 43 44 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 44 46 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 46 49 (src-block t face #18# font-lock-multiline t font-lock-fontified t fontified t) 49 76 (src-block t face #17# font-lock-multiline t font-lock-fontified t fontified t) 76 79 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 79 86 (src-block t face #20# font-lock-multiline t font-lock-fontified t fontified t) 86 88 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 88 95 (src-block t face #19# font-lock-multiline t font-lock-fontified t fontified t) 95 97 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 97 98 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 98 101 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 101 105 (src-block t face #21# font-lock-multiline t font-lock-fontified t fontified t) 105 126 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 126 133 (src-block t face #22# font-lock-multiline t font-lock-fontified t fontified t) 133 136 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 136 137 (src-block t face #7# font-lock-multiline t font-lock-fontified t fontified t) 137 163 (src-block t face #7# font-lock-fontified t font-lock-multiline t htmlize-link #8# help-echo #9# keymap #6# mouse-face highlight fontified t) 163 164 (src-block t face #7# font-lock-fontified t font-lock-multiline t htmlize-link #8# help-echo #9# keymap #6# mouse-face highlight rear-nonsticky #13# fontified t) 164 165 (src-block t face #7# font-lock-multiline t font-lock-fontified t fontified t) 165 167 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 167 174 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 174 179 (src-block t face #23# font-lock-multiline t font-lock-fontified t fontified t) 179 182 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 182 183 (src-block t face #10# font-lock-multiline t font-lock-fontified t fontified t) 183 207 (src-block t face #10# font-lock-fontified t font-lock-multiline t htmlize-link #11# help-echo #12# keymap #6# mouse-face highlight fontified t) 207 208 (src-block t face #10# font-lock-fontified t font-lock-multiline t htmlize-link #11# help-echo #12# keymap #6# mouse-face highlight rear-nonsticky #13# fontified t) 208 209 (src-block t face #10# font-lock-multiline t font-lock-fontified t fontified t) 209 211 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 211 218 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 218 224 (src-block t face #25# font-lock-multiline t font-lock-fontified t fontified t) 224 227 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 227 228 (src-block t face #14# font-lock-multiline t font-lock-fontified t fontified t) 228 257 (src-block t face #14# font-lock-fontified t font-lock-multiline t htmlize-link #15# help-echo #16# keymap #6# mouse-face highlight fontified t) 257 258 (src-block t face #14# font-lock-fontified t font-lock-multiline t htmlize-link #15# help-echo #16# keymap #6# mouse-face highlight rear-nonsticky #13# fontified t) 258 259 (src-block t face #14# font-lock-multiline t font-lock-fontified t fontified t) 259 263 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 263 264 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 264 287 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 287 290 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 290 296 (src-block t face #26# font-lock-multiline t font-lock-fontified t fontified t) 296 322 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 322 353 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 353 354 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 354 356 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 356 359 (src-block t face #27# font-lock-multiline t font-lock-fontified t fontified t) 359 405 (src-block t face #24# font-lock-multiline t font-lock-fontified t fontified t) 405 408 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 408 414 (src-block t face #28# font-lock-multiline t font-lock-fontified t fontified t) 414 450 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 450 487 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 487 488 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 488 491 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 491 498 (src-block t face #30# font-lock-multiline t font-lock-fontified t fontified t) 498 500 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 500 511 (src-block t face #29# font-lock-multiline t font-lock-fontified t fontified t) 511 513 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 513 516 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 516 520 (src-block t face #31# font-lock-multiline t font-lock-fontified t fontified t) 520 550 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 550 551 (src-block t face #5# font-lock-multiline t font-lock-fontified t fontified t) 551 560 (face org-block-end-line font-lock-multiline t font-lock-fontified t fontified t) 560 561 (face org-block-end-line fontified t)) #("r" 0 1 (fontified t)) #("e" 0 1 (fontified t)) #("b" 0 1 (fontified t)) #("m" 0 1 (fontified t)) #("u" 0 1 (fontified t)) #("n" 0 1 (fontified t)) #("e" 0 1 (fontified t)) #("n" 0 1 (fontified t)) #("i" 0 1 (fontified t)) #("e" 0 1 (fontified t)) #("b" 0 1 (fontified t)) #("i" 0 1 (fontified t)) #("l" 0 1 (fontified t)) #("n" 0 1 (fontified t)) #("b" 0 1 (fontified t)) #("
" 0 1 (yank-handler (evil-yank-line-handler nil t) fontified t)) "https://magit.vc/" #("org" 0 3 (fontified t)) "https://orgmode.org/" #("
" 0 1 (yank-handler (evil-yank-line-handler nil t) isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) "(use-package magit
  :ensure t)" #("*** 
" 0 2 (yank-handler #32=(evil-yank-line-handler nil t) keymap #33=(keymap) face org-hide fontified t) 2 3 (yank-handler #32# face org-level-3 keymap #33# fontified t) 3 4 (yank-handler #32# face org-level-3 keymap #33# fontified t) 4 5 (yank-handler #32# fontified t)) #("(use-package evil-collection
  :ensure t
  :after evil
  :init
  (evil-collection-init))

" 0 1 (src-block t face #34=(org-block) font-lock-multiline t font-lock-fontified t fontified t) 1 12 (src-block t face (font-lock-keyword-face . #34#) font-lock-multiline t font-lock-fontified t fontified t) 12 13 (src-block t face #34# font-lock-multiline t font-lock-fontified t fontified t) 13 28 (src-block t face (font-lock-constant-face . #34#) font-lock-multiline t font-lock-fontified t fontified t) 28 29 (src-block t face #34# font-lock-multiline t font-lock-fontified t fontified t) 29 31 (src-block t face #34# font-lock-multiline t font-lock-fontified t fontified t) 31 38 (src-block t face (font-lock-builtin-face . #34#) font-lock-multiline t font-lock-fontified t fontified t) 38 41 (src-block t face #34# font-lock-multiline t font-lock-fontified t fontified t) 41 43 (src-block t face #34# font-lock-multiline t font-lock-fontified t fontified t) 43 49 (src-block t face (font-lock-builtin-face . #34#) font-lock-multiline t font-lock-fontified t fontified t) 49 55 (src-block t face #34# font-lock-multiline t font-lock-fontified t fontified t) 55 57 (src-block t face #34# font-lock-multiline t font-lock-fontified t fontified t) 57 62 (src-block t face (font-lock-builtin-face . #34#) font-lock-multiline t font-lock-fontified t fontified t) 62 63 (src-block t face #34# font-lock-multiline t font-lock-fontified t fontified t) 63 89 (src-block t face #34# font-lock-multiline t font-lock-fontified t fontified t) 89 90 (src-block t face #34# font-lock-multiline t font-lock-fontified t fontified t)) #("
" 0 1 (yank-handler (evil-yank-line-handler nil t) face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) "(use-package evil-collection
  :ensure t
  :after evil
  :init
  (evil-collection-init))" #("* There is a slight annoyance with the line number pushing the rest of the text out!
" 0 1 (yank-handler #35=(evil-yank-line-handler nil t) face org-level-1 keymap #36=(keymap) fontified t) 1 2 (yank-handler #35# face org-level-1 keymap #36# fontified t) 2 84 (yank-handler #35# face org-level-1 fontified t) 84 85 (yank-handler #35# fontified t)) #("variety/ 	volumeicon/ 	xfce4/
yad.conf" 0 1 (completion--string #37=#("variety/" 0 1 (face #38=(completions-first-difference))) cursor-face completions-highlight mouse-face highlight face #38#) 1 8 (completion--string #37# cursor-face completions-highlight mouse-face highlight) 9 10 (display (space :align-to 72)) 10 11 (completion--string #39=#("volumeicon/" 0 1 (face #40=(completions-first-difference))) cursor-face completions-highlight mouse-face highlight face #40#) 11 21 (completion--string #39# cursor-face completions-highlight mouse-face highlight) 22 23 (display (space :align-to 96)) 23 24 (completion--string #41=#("xfce4/" 0 1 (face #42=(completions-first-difference))) cursor-face completions-highlight mouse-face highlight face #42#) 24 29 (completion--string #41# cursor-face completions-highlight mouse-face highlight) 30 31 (completion--string #43=#("yad.conf" 0 1 (face #44=(completions-first-difference))) cursor-face completions-highlight mouse-face highlight face #44#) 31 38 (completion--string #43# cursor-face completions-highlight mouse-face highlight)) #("hook" 0 4 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) #("-" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) #("mode" 0 4 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) #("-" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) #("org" 0 3 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) #(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) #(" " 0 1 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) #(" " 0 1 (face org-block-end-line font-lock-multiline t src-block t font-lock-fontified t fontified t)) #(" " 0 1 (face org-block-end-line font-lock-multiline t src-block t font-lock-fontified t fontified t)) #(" " 0 1 (face org-block-end-line font-lock-multiline t src-block t font-lock-fontified t fontified t)) #(" " 0 1 (face org-block-end-line font-lock-multiline t src-block t font-lock-fontified t fontified t)) "(column-number-mode)
(global-display-line-numbers-mode t)

;; Disable line numbers for some modes
(dolist (mode '(org-mode-hook
                term-mode-hook
                eshell-mode-hook))
  (add-hook mode (lambda () (display-line-numbers-mode 0))))" #("  (global-display-line-numbers-mode 1) ; line num
  (global-visual-line-mode 1)
(line-number-display-width )

" 0 39 (src-block t face #45=(org-block) font-lock-multiline t font-lock-fontified t fontified t) 39 41 (src-block t face (font-lock-comment-delimiter-face . #45#) font-lock-multiline t font-lock-fontified t fontified t) 41 50 (src-block t face (font-lock-comment-face . #45#) font-lock-multiline t font-lock-fontified t fontified t) 50 80 (src-block t face #45# font-lock-multiline t font-lock-fontified t fontified t) 80 109 (src-block t face #45# font-lock-multiline t font-lock-fontified t fontified t) 109 110 (src-block t face #45# font-lock-multiline t font-lock-fontified t fontified t)) #(" " 0 1 (fontified t)) #(" " 0 1 (fontified t)) #(" " 0 1 (fontified t)) #("PIXELWISE" 0 9 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) #("&" 0 1 (face (font-lock-type-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) #("optional " 0 8 (src-block t face (font-lock-type-face . #46=(org-block)) font-lock-multiline t font-lock-fontified t fontified t) 8 9 (src-block t face #46# font-lock-multiline t font-lock-fontified t fontified t)) "(line-number-display-width &optional PIXELWISE)
" #("
" 0 1 (yank-handler (evil-yank-line-handler nil t) fontified t)) #("   
" 0 3 (yank-handler #47=(evil-yank-line-handler nil t) fontified t) 3 4 (yank-handler #47# fontified t)) "    (scroll-bar-mode -1)        ; Disable visible scrollbar
    (tool-bar-mode -1)          ; Disable the toolbar
    (tooltip-mode -1)           ; Disable tooltips
    (set-fringe-mode 10)        ; Give some breathing room

" ";; This buffer is for text that is not saved, and for Lisp evaluation.
;; To create a file, visit it with C-x C-f and enter text in its buffer.

" #("
" 0 1 (yank-handler (evil-yank-line-handler nil t) fontified t)) "" #("    (scroll-bar-mode -1)        ; Disable visible scrollbar
    (tool-bar-mode -1)          ; Disable the toolbar
    (tooltip-mode -1)           ; Disable tooltips
    (set-fringe-mode 10)        ; Give some breathing room

" 0 32 (src-block t face #48=(org-block) font-lock-multiline t font-lock-fontified t fontified t) 32 34 (src-block t face (font-lock-comment-delimiter-face . #48#) font-lock-multiline t font-lock-fontified t fontified t) 34 60 (src-block t face (font-lock-comment-face . #48#) font-lock-multiline t font-lock-fontified t fontified t) 60 92 (src-block t face #48# font-lock-multiline t font-lock-fontified t fontified t) 92 94 (src-block t face (font-lock-comment-delimiter-face . #48#) font-lock-multiline t font-lock-fontified t fontified t) 94 114 (src-block t face (font-lock-comment-face . #48#) font-lock-multiline t font-lock-fontified t fontified t) 114 146 (src-block t face #48# font-lock-multiline t font-lock-fontified t fontified t) 146 148 (src-block t face (font-lock-comment-delimiter-face . #48#) font-lock-multiline t font-lock-fontified t fontified t) 148 165 (src-block t face (font-lock-comment-face . #48#) font-lock-multiline t font-lock-fontified t fontified t) 165 197 (src-block t face #48# font-lock-multiline t font-lock-fontified t fontified t) 197 199 (src-block t face (font-lock-comment-delimiter-face . #48#) font-lock-multiline t font-lock-fontified t fontified t) 199 224 (src-block t face (font-lock-comment-face . #48#) font-lock-multiline t font-lock-fontified t fontified t) 224 225 (src-block t face #48# font-lock-multiline t font-lock-fontified t fontified t)) #("above " 0 6 (face org-level-3 isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) #("the " 0 4 (face org-level-3 isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) #(" " 0 1 (face org-level-3 isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) #("
" 0 1 (yank-handler (evil-yank-line-handler nil t) fontified t)) #("
" 0 1 (yank-handler (evil-yank-line-handler nil t) fontified t)) #("
" 0 1 (yank-handler (evil-yank-line-handler nil t) fontified t)) #("
" 0 1 (yank-handler (evil-yank-line-handler nil t) fontified t)) #("\\" 0 1 (fontified t)) #("   (setq display-line-numbers-grow-only   t
        display-line-numbers-type        'relative
        display-line-numbers-width-start t)
" 0 4 (yank-handler #49=(evil-yank-line-handler nil t) face #50=(org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 4 8 (yank-handler #49# face (font-lock-keyword-face . #50#) font-lock-multiline t src-block t font-lock-fontified t fontified t) 8 44 (yank-handler #49# face #50# font-lock-multiline t src-block t font-lock-fontified t fontified t) 44 94 (yank-handler #49# face #50# font-lock-multiline t src-block t font-lock-fontified t fontified t) 94 95 (yank-handler #49# face #50# font-lock-multiline t src-block t font-lock-fontified t fontified t) 95 138 (yank-handler #49# face #50# font-lock-multiline t src-block t font-lock-fontified t fontified t) 138 139 (yank-handler #49# face #50# font-lock-multiline t src-block t font-lock-fontified t fontified t)) #("        display-line-numbers-width-start t)
" 0 43 (yank-handler #51=(evil-yank-line-handler nil t) face #52=(org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 43 44 (yank-handler #51# face #52# font-lock-multiline t src-block t font-lock-fontified t fontified t)) #("        display-line-numbers-type        'relative
" 0 50 (yank-handler #53=(evil-yank-line-handler nil t) face #54=(org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 50 51 (yank-handler #53# face #54# font-lock-multiline t src-block t font-lock-fontified t fontified t)) #("   (setq display-line-numbers-grow-only   t
" 0 4 (yank-handler #55=(evil-yank-line-handler nil t) src-block t face #56=(org-block) font-lock-multiline t font-lock-fontified t fontified t) 4 8 (yank-handler #55# src-block t face (font-lock-keyword-face . #56#) font-lock-multiline t font-lock-fontified t fontified t) 8 44 (yank-handler #55# src-block t face #56# font-lock-multiline t font-lock-fontified t fontified t)) #(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) #(";" 0 1 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) #(";" 0 1 (src-block t face (font-lock-comment-delimiter-face org-block) font-lock-multiline t font-lock-fontified t fontified t)) #(";" 0 1 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) #(";" 0 1 (src-block t face (font-lock-comment-delimiter-face org-block) font-lock-multiline t font-lock-fontified t fontified t)) #("  (setq display-line-numbers-type 'relative)
" 0 3 (yank-handler #57=(evil-yank-line-handler nil t) face #58=(org-block) font-lock-multiline t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show src-block t font-lock-fontified t fontified t) 3 7 (yank-handler #57# face (font-lock-keyword-face . #58#) font-lock-multiline t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show src-block t font-lock-fontified t fontified t) 7 45 (yank-handler #57# face #58# font-lock-multiline t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show src-block t font-lock-fontified t fontified t)) "(setq display-line-numbers-grow-only   t
      display-line-numbers-type        'relative
      display-line-numbers-width-start t)" #("  (setq display-line-numbers-type 'relative)
" 0 2 (yank-handler #59=(evil-yank-line-handler nil t) face #60=(org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 2 3 (yank-handler #59# face #60# font-lock-multiline t src-block t font-lock-fontified t fontified t) 3 7 (yank-handler #59# face (font-lock-keyword-face . #60#) font-lock-multiline t src-block t font-lock-fontified t fontified t) 7 45 (yank-handler #59# face #60# font-lock-multiline t src-block t font-lock-fontified t fontified t)) #(";" 0 1 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) #(";" 0 1 (src-block t face (font-lock-comment-delimiter-face org-block) font-lock-multiline t font-lock-fontified t fontified t)) #("(" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) #(")" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) #("(menu-bar--display-line-numbers-mode-relative)
" 0 47 (yank-handler (evil-yank-line-handler nil t))) #("
" 0 1 (yank-handler (evil-yank-line-handler nil t) face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) #("  ;;(package-refresh-contents)
" 0 2 (yank-handler #61=(evil-yank-line-handler nil t) face #62=(org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 2 4 (yank-handler #61# face (font-lock-comment-delimiter-face . #62#) font-lock-multiline t src-block t font-lock-fontified t fontified t) 4 30 (yank-handler #61# face #63=(font-lock-comment-face . #62#) font-lock-multiline t src-block t font-lock-fontified t fontified t) 30 31 (yank-handler #61# face #63# font-lock-multiline t src-block t font-lock-fontified t fontified t)) #("               '(\"melpa\" . \"https://melpa.org/packages/\"))
" 0 17 (yank-handler #64=(evil-yank-line-handler nil t) face #65=(org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 17 24 (yank-handler #64# face (font-lock-string-face . #65#) font-lock-multiline t src-block t font-lock-fontified t fontified t) 24 27 (yank-handler #64# face #65# font-lock-multiline t src-block t font-lock-fontified t fontified t) 27 28 (yank-handler #64# face #66=(font-lock-string-face . #65#) font-lock-multiline t src-block t font-lock-fontified t fontified t) 28 54 (yank-handler #64# face #66# font-lock-multiline t keymap #67=(keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight src-block t font-lock-fontified t htmlize-link #68=(:uri "https://melpa.org/packages/") help-echo #69="LINK: https://melpa.org/packages/" fontified t) 54 55 (yank-handler #64# face #66# font-lock-multiline t keymap #67# mouse-face highlight src-block t font-lock-fontified t htmlize-link #68# help-echo #69# rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) fontified t) 55 56 (yank-handler #64# face #66# font-lock-multiline t src-block t font-lock-fontified t fontified t) 56 58 (yank-handler #64# face #65# font-lock-multiline t src-block t font-lock-fontified t fontified t) 58 59 (yank-handler #64# face #65# font-lock-multiline t src-block t font-lock-fontified t fontified t)) #("  (add-to-list 'package-archives
" 0 32 (yank-handler #70=(evil-yank-line-handler nil t) face #71=(org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 32 33 (yank-handler #70# face #71# font-lock-multiline t src-block t font-lock-fontified t fontified t)) #("  (require 'package)
" 0 3 (yank-handler #72=(evil-yank-line-handler nil t) face #73=(org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 3 10 (yank-handler #72# face (font-lock-keyword-face . #73#) font-lock-multiline t src-block t font-lock-fontified t fontified t) 10 12 (yank-handler #72# face #73# font-lock-multiline t src-block t font-lock-fontified t fontified t) 12 19 (yank-handler #72# face (font-lock-constant-face . #73#) font-lock-multiline t src-block t font-lock-fontified t fontified t) 19 20 (yank-handler #72# face #73# font-lock-multiline t src-block t font-lock-fontified t fontified t) 20 21 (yank-handler #72# face #73# font-lock-multiline t src-block t font-lock-fontified t fontified t)) #("    ;; Set up package.el to work with MELPA
" 0 4 (yank-handler #74=(evil-yank-line-handler nil t) face #75=(org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 4 7 (yank-handler #74# face (font-lock-comment-delimiter-face . #75#) font-lock-multiline t src-block t font-lock-fontified t fontified t) 7 44 (yank-handler #74# face (font-lock-comment-face . #75#) font-lock-multiline t src-block t font-lock-fontified t fontified t)) #("   ; EVIL mode if I can get it to work. Is it worth using the vim keybindings?
" 0 3 (yank-handler #76=(evil-yank-line-handler nil t) face #77=(org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 3 5 (yank-handler #76# face (font-lock-comment-delimiter-face . #77#) font-lock-multiline t src-block t font-lock-fontified t fontified t) 5 79 (yank-handler #76# face (font-lock-comment-face . #77#) font-lock-multiline t src-block t font-lock-fontified t fontified t)) #(" ;" 0 1 (src-block t face #78=(org-block) font-lock-multiline t font-lock-fontified t fontified t) 1 2 (src-block t face (font-lock-comment-delimiter-face . #78#) font-lock-multiline t font-lock-fontified t fontified t)) #("  (use-package evil-tutor)
" 0 3 (yank-handler #79=(evil-yank-line-handler nil t) face #80=(org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 3 14 (yank-handler #79# face (font-lock-keyword-face . #80#) font-lock-multiline t src-block t font-lock-fontified t fontified t) 14 15 (yank-handler #79# face #80# font-lock-multiline t src-block t font-lock-fontified t fontified t) 15 25 (yank-handler #79# face (font-lock-constant-face . #80#) font-lock-multiline t src-block t font-lock-fontified t fontified t) 25 26 (yank-handler #79# face #80# font-lock-multiline t src-block t font-lock-fontified t fontified t) 26 27 (yank-handler #79# face #80# font-lock-multiline t src-block t font-lock-fontified t fontified t)) #("
" 0 1 (yank-handler (evil-yank-line-handler nil t) face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) #("  ;; Include the Evil-tutor
" 0 2 (yank-handler #81=(evil-yank-line-handler nil t) face #82=(org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 2 5 (yank-handler #81# face (font-lock-comment-delimiter-face . #82#) font-lock-multiline t src-block t font-lock-fontified t fontified t) 5 28 (yank-handler #81# face (font-lock-comment-face . #82#) font-lock-multiline t src-block t font-lock-fontified t fontified t)) "(use-package evil-tutor)" #("What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
" 0 1 (yank-handler #83=(evil-yank-line-handler nil t) fontified t) 1 32 (yank-handler #83# fontified t) 32 33 (yank-handler #83# rear-nonsticky t fontified t) 33 65 (yank-handler #83# fontified t) 65 66 (yank-handler #83# rear-nonsticky t fontified t) 66 98 (yank-handler #83# fontified t) 98 99 (yank-handler #83# rear-nonsticky t fontified t) 99 131 (yank-handler #83# fontified t) 131 132 (yank-handler #83# rear-nonsticky t fontified t) 132 164 (yank-handler #83# fontified t) 164 165 (yank-handler #83# rear-nonsticky t fontified t) 165 197 (yank-handler #83# fontified t) 197 198 (yank-handler #83# rear-nonsticky t fontified t) 198 230 (yank-handler #83# fontified t) 230 231 (yank-handler #83# rear-nonsticky t fontified t) 231 263 (yank-handler #83# fontified t) 263 264 (yank-handler #83# rear-nonsticky t fontified t) 264 296 (yank-handler #83# fontified t) 296 297 (yank-handler #83# rear-nonsticky t fontified t) 297 329 (yank-handler #83# fontified t) 329 330 (yank-handler #83# rear-nonsticky t fontified t) 330 362 (yank-handler #83# fontified t) 362 363 (yank-handler #83# rear-nonsticky t fontified t) 363 395 (yank-handler #83# fontified t) 395 396 (yank-handler #83# rear-nonsticky t fontified t) 396 428 (yank-handler #83# fontified t) 428 429 (yank-handler #83# rear-nonsticky t fontified t) 429 461 (yank-handler #83# fontified t) 461 462 (yank-handler #83# rear-nonsticky t fontified t) 462 494 (yank-handler #83# fontified t) 494 495 (yank-handler #83# rear-nonsticky t fontified t) 495 527 (yank-handler #83# fontified t) 527 528 (yank-handler #83# rear-nonsticky t fontified t) 528 560 (yank-handler #83# fontified t) 560 561 (yank-handler #83# rear-nonsticky t fontified t) 561 593 (yank-handler #83# fontified t) 593 594 (yank-handler #83# rear-nonsticky t fontified t) 594 626 (yank-handler #83# fontified t) 626 627 (yank-handler #83# rear-nonsticky t fontified t) 627 659 (yank-handler #83# fontified t) 659 660 (yank-handler #83# rear-nonsticky t fontified t) 660 692 (yank-handler #83# fontified t) 692 693 (yank-handler #83# rear-nonsticky t fontified t) 693 725 (yank-handler #83# fontified t) 725 726 (yank-handler #83# rear-nonsticky t fontified t) 726 758 (yank-handler #83# fontified t) 758 759 (yank-handler #83# rear-nonsticky t fontified t) 759 791 (yank-handler #83# fontified t) 791 792 (yank-handler #83# rear-nonsticky t fontified t) 792 824 (yank-handler #83# fontified t) 824 825 (yank-handler #83# rear-nonsticky t fontified t) 825 826 (yank-handler #83# fontified t) 826 857 (yank-handler #83# fontified t) 857 858 (yank-handler #83# rear-nonsticky t fontified t) 858 890 (yank-handler #83# fontified t) 890 891 (yank-handler #83# rear-nonsticky t fontified t) 891 923 (yank-handler #83# fontified t) 923 924 (yank-handler #83# rear-nonsticky t fontified t) 924 956 (yank-handler #83# fontified t) 956 957 (yank-handler #83# rear-nonsticky t fontified t) 957 989 (yank-handler #83# fontified t) 989 990 (yank-handler #83# rear-nonsticky t fontified t) 990 1022 (yank-handler #83# fontified t) 1022 1023 (yank-handler #83# rear-nonsticky t fontified t) 1023 1055 (yank-handler #83# fontified t) 1055 1056 (yank-handler #83# rear-nonsticky t fontified t) 1056 1088 (yank-handler #83# fontified t) 1088 1089 (yank-handler #83# rear-nonsticky t fontified t) 1089 1121 (yank-handler #83# fontified t) 1121 1122 (yank-handler #83# rear-nonsticky t fontified t) 1122 1154 (yank-handler #83# fontified t) 1154 1155 (yank-handler #83# rear-nonsticky t fontified t) 1155 1187 (yank-handler #83# fontified t) 1187 1188 (yank-handler #83# rear-nonsticky t fontified t) 1188 1220 (yank-handler #83# fontified t) 1220 1221 (yank-handler #83# rear-nonsticky t fontified t) 1221 1253 (yank-handler #83# fontified t) 1253 1254 (yank-handler #83# rear-nonsticky t fontified t) 1254 1286 (yank-handler #83# fontified t) 1286 1287 (yank-handler #83# rear-nonsticky t fontified t) 1287 1319 (yank-handler #83# fontified t) 1319 1320 (yank-handler #83# rear-nonsticky t fontified t) 1320 1352 (yank-handler #83# fontified t) 1352 1353 (yank-handler #83# rear-nonsticky t fontified t) 1353 1385 (yank-handler #83# fontified t) 1385 1386 (yank-handler #83# rear-nonsticky t fontified t) 1386 1418 (yank-handler #83# fontified t) 1418 1419 (yank-handler #83# rear-nonsticky t fontified t) 1419 1451 (yank-handler #83# fontified t) 1451 1452 (yank-handler #83# rear-nonsticky t fontified t) 1452 1484 (yank-handler #83# fontified t) 1484 1485 (yank-handler #83# rear-nonsticky t fontified t) 1485 1500 (yank-handler #83# fontified t) 1500 1517 (yank-handler #83# fontified t) 1517 1518 (yank-handler #83# rear-nonsticky t fontified t) 1518 1550 (yank-handler #83#) 1550 1551 (yank-handler #83# rear-nonsticky t) 1551 1583 (yank-handler #83#) 1583 1584 (yank-handler #83# rear-nonsticky t) 1584 1616 (yank-handler #83#) 1616 1617 (yank-handler #83# rear-nonsticky t) 1617 1649 (yank-handler #83#) 1649 1650 (yank-handler #83# rear-nonsticky t) 1650 1683 (yank-handler #83#)) #("What about markdown in emacs????" 0 32 (fontified t)) #("What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
" 0 32 (yank-handler #84=(evil-yank-line-handler nil t) fontified t) 32 33 (yank-handler #84# rear-nonsticky t fontified t) 33 65 (yank-handler #84# fontified t) 65 66 (yank-handler #84# rear-nonsticky t fontified t) 66 98 (yank-handler #84# fontified t) 98 99 (yank-handler #84# rear-nonsticky t fontified t) 99 131 (yank-handler #84# fontified t) 131 132 (yank-handler #84# rear-nonsticky t fontified t) 132 164 (yank-handler #84# fontified t) 164 165 (yank-handler #84# rear-nonsticky t fontified t) 165 197 (yank-handler #84# fontified t) 197 198 (yank-handler #84# rear-nonsticky t fontified t) 198 230 (yank-handler #84# fontified t) 230 231 (yank-handler #84# rear-nonsticky t fontified t) 231 263 (yank-handler #84# fontified t) 263 264 (yank-handler #84# rear-nonsticky t fontified t) 264 296 (yank-handler #84# fontified t) 296 297 (yank-handler #84# rear-nonsticky t fontified t) 297 329 (yank-handler #84# fontified t) 329 330 (yank-handler #84# rear-nonsticky t fontified t) 330 362 (yank-handler #84# fontified t) 362 363 (yank-handler #84# rear-nonsticky t fontified t) 363 395 (yank-handler #84# fontified t) 395 396 (yank-handler #84# rear-nonsticky t fontified t) 396 428 (yank-handler #84# fontified t) 428 429 (yank-handler #84# rear-nonsticky t fontified t) 429 461 (yank-handler #84# fontified t) 461 462 (yank-handler #84# rear-nonsticky t fontified t) 462 494 (yank-handler #84# fontified t) 494 495 (yank-handler #84# rear-nonsticky t fontified t) 495 527 (yank-handler #84# fontified t) 527 528 (yank-handler #84# rear-nonsticky t fontified t) 528 560 (yank-handler #84# fontified t) 560 561 (yank-handler #84# rear-nonsticky t fontified t) 561 593 (yank-handler #84# fontified t) 593 594 (yank-handler #84# rear-nonsticky t fontified t) 594 626 (yank-handler #84# fontified t) 626 627 (yank-handler #84# rear-nonsticky t fontified t) 627 659 (yank-handler #84# fontified t) 659 660 (yank-handler #84# rear-nonsticky t fontified t) 660 692 (yank-handler #84# fontified t) 692 693 (yank-handler #84# rear-nonsticky t fontified t) 693 725 (yank-handler #84# fontified t) 725 726 (yank-handler #84# rear-nonsticky t fontified t) 726 758 (yank-handler #84# fontified t) 758 759 (yank-handler #84# rear-nonsticky t fontified t) 759 791 (yank-handler #84# fontified t) 791 792 (yank-handler #84# rear-nonsticky t fontified t) 792 824 (yank-handler #84# fontified t) 824 825 (yank-handler #84# rear-nonsticky t fontified t) 825 826 (yank-handler #84# fontified t) 826 857 (yank-handler #84# fontified t) 857 858 (yank-handler #84#)) #("What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
What about markdown in emacs????
W" 0 32 (fontified t) 32 33 (fontified t rear-nonsticky t) 33 65 (fontified t) 65 66 (fontified t rear-nonsticky t) 66 98 (fontified t) 98 99 (fontified t rear-nonsticky t) 99 131 (fontified t) 131 132 (fontified t rear-nonsticky t) 132 164 (fontified t) 164 165 (fontified t rear-nonsticky t) 165 197 (fontified t) 197 198 (fontified t rear-nonsticky t) 198 230 (fontified t) 230 231 (fontified t rear-nonsticky t) 231 263 (fontified t) 263 264 (fontified t rear-nonsticky t) 264 296 (fontified t) 296 297 (fontified t rear-nonsticky t) 297 329 (fontified t) 329 330 (fontified t rear-nonsticky t) 330 362 (fontified t) 362 363 (fontified t rear-nonsticky t) 363 395 (fontified t) 395 396 (fontified t rear-nonsticky t) 396 428 (fontified t) 428 429 (fontified t rear-nonsticky t) 429 461 (fontified t) 461 462 (fontified t rear-nonsticky t) 462 494 (fontified t) 494 495 (fontified t rear-nonsticky t) 495 527 (fontified t) 527 528 (fontified t rear-nonsticky t) 528 560 (fontified t) 560 561 (fontified t rear-nonsticky t) 561 593 (fontified t) 593 594 (fontified t rear-nonsticky t) 594 626 (fontified t) 626 627 (fontified t rear-nonsticky t) 627 659 (fontified t) 659 660 (fontified t rear-nonsticky t) 660 692 (fontified t) 692 693 (fontified t rear-nonsticky t) 693 725 (fontified t) 725 726 (fontified t rear-nonsticky t) 726 758 (fontified t) 758 759 (fontified t rear-nonsticky t) 759 791 (fontified t) 791 792 (fontified t rear-nonsticky t) 792 824 (fontified t) 824 825 (fontified t rear-nonsticky t) 825 857 (fontified t) 857 858 (fontified t rear-nonsticky t) 858 890 (fontified t) 890 891 (fontified t rear-nonsticky t) 891 923 (fontified t) 923 924 (fontified t rear-nonsticky t) 924 956 (fontified t) 956 957 (fontified t rear-nonsticky t) 957 989 (fontified t) 989 990 (fontified t rear-nonsticky t) 990 1022 (fontified t) 1022 1023 (fontified t rear-nonsticky t) 1023 1055 (fontified t) 1055 1056 (fontified t rear-nonsticky t) 1056 1088 (fontified t) 1088 1089 (fontified t rear-nonsticky t) 1089 1121 (fontified t) 1121 1122 (fontified t rear-nonsticky t) 1122 1154 (fontified t) 1154 1155 (fontified t rear-nonsticky t) 1155 1187 (fontified t) 1187 1188 (fontified t rear-nonsticky t) 1188 1220 (fontified t) 1220 1221 (fontified t rear-nonsticky t) 1221 1222 (fontified t)) #("
" 0 1 (yank-handler (evil-yank-line-handler nil t) fontified t rear-nonsticky t)) #(";; This buffer is for text that is not saved, and for Lisp evaluation.
;; To create a file, visit it with C-x C-f and enter text in its buffer.



What about markdown in emacs????
" 0 3 (yank-handler #85=(evil-yank-line-handler nil t) face font-lock-comment-delimiter-face fontified t) 3 71 (yank-handler #85# face font-lock-comment-face fontified t) 71 74 (yank-handler #85# face font-lock-comment-delimiter-face fontified t) 74 106 (yank-handler #85# face font-lock-comment-face fontified t) 106 113 (yank-handler #85# face font-lock-comment-face fontified t font-lock-face help-key-binding) 113 144 (yank-handler #85# face font-lock-comment-face fontified t) 144 145 (yank-handler #85# fontified t) 145 146 (yank-handler #85# rear-nonsticky t fontified t) 146 147 (yank-handler #85# fontified t rear-nonsticky t) 147 179 (yank-handler #85# fontified t) 179 180 (yank-handler #85# fontified t rear-nonsticky t)) #("What about markdown in emacs????" 0 32 (fontified t)) #("What about markdown in emacs????
" 0 33 (yank-handler (evil-yank-line-handler nil t) fontified t)) #("What about markdown in emacs????
" 0 33 (yank-handler (evil-yank-line-handler nil t) fontified t)) #("does distrotube cover anything about markdown?
" 0 46 (yank-handler #86=(evil-yank-line-handler nil t) fontified t) 46 47 (yank-handler #86# fontified t)) "(use-package which-key
  :init (which-key-mode)
  :diminish which-key-mode
  :config
  (setq which-key-idle-delay 0.3))" #(";;(package-initialize)
" 0 2 (yank-handler #87=(evil-yank-line-handler nil t) face (font-lock-comment-delimiter-face . #88=(org-block)) font-lock-multiline t src-block t font-lock-fontified t fontified t) 2 23 (yank-handler #87# face (font-lock-comment-face . #88#) font-lock-multiline t src-block t font-lock-fontified t fontified t)) ";; Set up package.el to work with MELPA
(require 'package)
(add-to-list 'package-archives
             '(\"melpa\" . \"https://melpa.org/packages/\"))
(package-initialize)
(package-refresh-contents)

;; Download Evil
(unless (package-installed-p 'evil)
  (package-install 'evil))

;; Enable Evil
(require 'evil)
(evil-mode 1)" ";; Set up package.el to work with MELPA
(require 'package)
(add-to-list 'package-archives
             '(\"melpa\" . \"https://melpa.org/packages/\"))
(package-initialize)
(package-refresh-contents)

;; Download Evil
(unless (package-installed-p 'evil)
  (package-install 'evil))

;; Enable Evil
(require 'evil)
(evil-mode 1)" #("
" 0 1 (fontified t)) #("
" 0 1 (fontified t)) #("#+begin_src emacs-lisp


" 0 20 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line) 20 22 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line) 22 23 (fontified t font-lock-fontified t) 23 24 (src-block t font-lock-fontified t fontified t) 24 25 (fontified t font-lock-fontified t src-block t))))
(setq search-ring '(#("rainbow" 0 7 (isearch-case-fold-search t isearch-regexp-function nil)) #("init" 0 4 (isearch-case-fold-search t isearch-regexp-function #[513 "\300\301\302\300\303\304\300\305\306\307!###\207" [replace-regexp-in-string "\"" "[\"“”]" "'" "['’]" "`" "[`‘]" regexp-quote] 13 "

(fn STRING &optional LAX)"])) #(".bashrc" 0 7 (isearch-case-fold-search t isearch-regexp-function nil)) #("alias e" 0 7 (isearch-case-fold-search t isearch-regexp-function nil)) #("variety" 0 7 (isearch-case-fold-search t isearch-regexp-function nil))))
(setq regexp-search-ring '(#("evil" 0 4 (isearch-case-fold-search t)) #("package manager" 0 15 (isearch-case-fold-search t)) #("init" 0 4 (isearch-case-fold-search t)) #("-init" 0 5 (isearch-case-fold-search t)) #("\\<
\\>" 0 5 (isearch-case-fold-search nil))))
